name: 라이트하우스 CI

on:
  push:
    branches:
      - main
      - develop
      - feature/**
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

env:
  NODE_VERSION: '18'

jobs:
  lighthouse:
    name: ${{ matrix.app }} 라이트하우스 CI 실행
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [admin, student]

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: 의존성 설치
        run: yarn install --frozen-lockfile

      - name: 환경 변수 설정
        run: |
          echo "TEST_ID=${{ secrets.TEST_ID }}" >> $GITHUB_ENV
          echo "TEST_PW=${{ secrets.TEST_PW }}" >> $GITHUB_ENV

      - name: ${{ matrix.app }} 애플리케이션 빌드
        run: yarn workspace @mozu/${{ matrix.app }} build

      - name: ${{ matrix.app }} 라이트하우스 CI 실행
        run: npx lhci autorun --config=./.lighthouserc.json
        working-directory: ./packages/${{ matrix.app }}

      - name: ${{ matrix.app }} 라이트하우스 결과 PR 댓글 추가
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const appName = process.env.APP_NAME;
            const reportsDir = `./packages/${appName}/lhci_reports`;
            
            try {
              if (!fs.existsSync(reportsDir)) {
                console.log(`${appName}에 대한 라이트하우스 리포트를 찾을 수 없습니다.`);
                return;
              }
              
              const files = fs.readdirSync(reportsDir);
              const reportFiles = files.filter(f => f.endsWith('.json'));
              
              if (reportFiles.length === 0) {
                console.log(`${appName}에 대한 JSON 리포트를 찾을 수 없습니다.`);
                return;
              }
              
              const reportPath = path.join(reportsDir, reportFiles[0]);
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              
              const scores = {
                performance: Math.round(report.categories.performance.score * 100),
                accessibility: Math.round(report.categories.accessibility.score * 100),
                'best-practices': Math.round(report.categories['best-practices'].score * 100),
                seo: Math.round(report.categories.seo.score * 100)
              };
              
              const getEmoji = (score) => {
                if (score >= 90) return '🟢';
                if (score >= 50) return '🟡';
                return '🔴';
              };
              
              const comment = `## 🚨 \`${appName}\` 라이트하우스 CI 결과 (Lighthouse CI Results)
              
              | 항목 (Category) | 점수 (Score) | 상태 (Status) |
              |-----------------|--------------|---------------|
              | 성능 (Performance) | ${scores.performance} | ${getEmoji(scores.performance)} |
              | 접근성 (Accessibility) | ${scores.accessibility} | ${getEmoji(scores.accessibility)} |
              | 모범 사례 (Best Practices) | ${scores['best-practices']} | ${getEmoji(scores['best-practices'])} |
              | SEO | ${scores.seo} | ${getEmoji(scores.seo)} |
              
              📊 **상세 리포트 (Detailed Report)**: [라이트하우스 CI 결과 보기 (View Lighthouse CI Results)](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              
              ${scores.performance < 50 ? '⚠️ **성능 경고 (Performance Warning)**: 점수가 50점 미만입니다. 성능 최적화를 고려해주세요. (Score is below 50. Consider optimizing.)' : ''}
              ${scores.accessibility < 70 ? '⚠️ **접근성 경고 (Accessibility Warning)**: 점수가 70점 미만입니다. 접근성 문제를 검토해주세요. (Score is below 70. Please review accessibility issues.)' : ''}
              `;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
              
            } catch (error) {
              console.error('댓글 작성 중 오류 발생:', error);
            }
        env:
          APP_NAME: ${{ matrix.app }}

      - name: ${{ matrix.app }} 라이트하우스 리포트 업로드
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports-${{ matrix.app }}-${{ github.sha }}
          path: |
            ./packages/${{ matrix.app }}/lhci_reports/
            ./packages/${{ matrix.app }}/lighthouse-debug.log
            ./packages/${{ matrix.app }}/url-collection.json
          retention-days: 30